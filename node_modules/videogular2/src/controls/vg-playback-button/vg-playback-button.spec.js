"use strict";
var vg_playback_button_1 = require("./vg-playback-button");
var vg_api_1 = require("../../core/services/vg-api");
var vg_states_1 = require("../../core/states/vg-states");
describe('Playback Button', function () {
    var playbackButton;
    var ref;
    var api;
    beforeEach(function () {
        ref = {
            nativeElement: {
                getAttribute: function (name) {
                    return name;
                }
            }
        };
        api = new vg_api_1.VgAPI();
        api.medias = {
            main: {
                state: vg_states_1.VgStates.VG_PLAYING
            },
            secondary: {
                state: vg_states_1.VgStates.VG_PAUSED
            }
        };
        playbackButton = new vg_playback_button_1.VgPlaybackButton(ref, api);
    });
    it('Should set playbackIndex default value to 1', function () {
        expect(playbackButton.playbackIndex).toEqual(1);
    });
    it('Should get media by id on init', function () {
        spyOn(api, 'getMediaById').and.callFake(function () { });
        playbackButton.vgFor = 'test';
        playbackButton.onPlayerReady();
        expect(api.getMediaById).toHaveBeenCalledWith('test');
    });
    describe('onClick (single and multiple media)', function () {
        it('should increase playbackIndex', function () {
            api.medias = {
                main: {
                    state: vg_states_1.VgStates.VG_PLAYING
                }
            };
            playbackButton.target = api;
            playbackButton.onClick();
            expect(playbackButton.playbackIndex).toEqual(2);
        });
        it('should set playbackRate to target media', function () {
            api.medias = {
                main: {
                    state: vg_states_1.VgStates.VG_PLAYING
                }
            };
            playbackButton.target = api;
            playbackButton.onClick();
            expect(playbackButton.target.playbackRate).toEqual('1.5');
        });
        it('should set playbackRate to target media', function () {
            var media = {
                playbackRate: {
                    test: '1'
                }
            };
            playbackButton.target = media;
            playbackButton.vgFor = 'test';
            playbackButton.onClick();
            expect(playbackButton.target.playbackRate.test).toEqual('1.5');
        });
    });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmctcGxheWJhY2stYnV0dG9uLnNwZWMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJ2Zy1wbGF5YmFjay1idXR0b24uc3BlYy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsbUNBQStCLHNCQUFzQixDQUFDLENBQUE7QUFDdEQsdUJBQW9CLDRCQUE0QixDQUFDLENBQUE7QUFFakQsMEJBQXVCLDZCQUE2QixDQUFDLENBQUE7QUFFckQsUUFBUSxDQUFDLGlCQUFpQixFQUFFO0lBQ3hCLElBQUksY0FBK0IsQ0FBQztJQUNwQyxJQUFJLEdBQWMsQ0FBQztJQUNuQixJQUFJLEdBQVMsQ0FBQztJQUVkLFVBQVUsQ0FBQztRQUNQLEdBQUcsR0FBRztZQUNGLGFBQWEsRUFBRTtnQkFDWCxZQUFZLEVBQUUsVUFBQyxJQUFJO29CQUNmLE1BQU0sQ0FBQyxJQUFJLENBQUM7Z0JBQ2hCLENBQUM7YUFDSjtTQUNKLENBQUM7UUFFRixHQUFHLEdBQUcsSUFBSSxjQUFLLEVBQUUsQ0FBQztRQUNsQixHQUFHLENBQUMsTUFBTSxHQUFHO1lBQ1QsSUFBSSxFQUFFO2dCQUNGLEtBQUssRUFBRSxvQkFBUSxDQUFDLFVBQVU7YUFDN0I7WUFDRCxTQUFTLEVBQUU7Z0JBQ1AsS0FBSyxFQUFFLG9CQUFRLENBQUMsU0FBUzthQUM1QjtTQUNKLENBQUM7UUFHRixjQUFjLEdBQUcsSUFBSSxxQ0FBZ0IsQ0FBQyxHQUFHLEVBQUUsR0FBRyxDQUFDLENBQUM7SUFDcEQsQ0FBQyxDQUFDLENBQUM7SUFFSCxFQUFFLENBQUMsNkNBQTZDLEVBQUU7UUFDOUMsTUFBTSxDQUFDLGNBQWMsQ0FBQyxhQUFhLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDcEQsQ0FBQyxDQUFDLENBQUM7SUFFSCxFQUFFLENBQUMsZ0NBQWdDLEVBQUU7UUFDakMsS0FBSyxDQUFDLEdBQUcsRUFBRSxjQUFjLENBQUMsQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLGNBQVEsQ0FBQyxDQUFDLENBQUM7UUFFbkQsY0FBYyxDQUFDLEtBQUssR0FBRyxNQUFNLENBQUM7UUFDOUIsY0FBYyxDQUFDLGFBQWEsRUFBRSxDQUFDO1FBRS9CLE1BQU0sQ0FBQyxHQUFHLENBQUMsWUFBWSxDQUFDLENBQUMsb0JBQW9CLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDMUQsQ0FBQyxDQUFDLENBQUM7SUFFSCxRQUFRLENBQUMscUNBQXFDLEVBQUU7UUFDNUMsRUFBRSxDQUFDLCtCQUErQixFQUFFO1lBQ2hDLEdBQUcsQ0FBQyxNQUFNLEdBQUc7Z0JBQ1QsSUFBSSxFQUFFO29CQUNGLEtBQUssRUFBRSxvQkFBUSxDQUFDLFVBQVU7aUJBQzdCO2FBQ0osQ0FBQztZQUVGLGNBQWMsQ0FBQyxNQUFNLEdBQUcsR0FBRyxDQUFDO1lBRTVCLGNBQWMsQ0FBQyxPQUFPLEVBQUUsQ0FBQztZQUV6QixNQUFNLENBQUMsY0FBYyxDQUFDLGFBQWEsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNwRCxDQUFDLENBQUMsQ0FBQztRQUVILEVBQUUsQ0FBQyx5Q0FBeUMsRUFBRTtZQUMxQyxHQUFHLENBQUMsTUFBTSxHQUFHO2dCQUNULElBQUksRUFBRTtvQkFDRixLQUFLLEVBQUUsb0JBQVEsQ0FBQyxVQUFVO2lCQUM3QjthQUNKLENBQUM7WUFFRixjQUFjLENBQUMsTUFBTSxHQUFHLEdBQUcsQ0FBQztZQUU1QixjQUFjLENBQUMsT0FBTyxFQUFFLENBQUM7WUFFekIsTUFBTSxDQUFDLGNBQWMsQ0FBQyxNQUFNLENBQUMsWUFBWSxDQUFDLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQzlELENBQUMsQ0FBQyxDQUFDO1FBRUgsRUFBRSxDQUFDLHlDQUF5QyxFQUFFO1lBQzFDLElBQUksS0FBSyxHQUFHO2dCQUNSLFlBQVksRUFBRTtvQkFDVixJQUFJLEVBQUUsR0FBRztpQkFDWjthQUNKLENBQUM7WUFFRixjQUFjLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQztZQUM5QixjQUFjLENBQUMsS0FBSyxHQUFHLE1BQU0sQ0FBQztZQUU5QixjQUFjLENBQUMsT0FBTyxFQUFFLENBQUM7WUFFekIsTUFBTSxDQUFDLGNBQWMsQ0FBQyxNQUFNLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUNuRSxDQUFDLENBQUMsQ0FBQztJQUNQLENBQUMsQ0FBQyxDQUFDO0FBQ1AsQ0FBQyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1ZnUGxheWJhY2tCdXR0b259IGZyb20gXCIuL3ZnLXBsYXliYWNrLWJ1dHRvblwiO1xuaW1wb3J0IHtWZ0FQSX0gZnJvbSBcIi4uLy4uL2NvcmUvc2VydmljZXMvdmctYXBpXCI7XG5pbXBvcnQge0VsZW1lbnRSZWZ9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5pbXBvcnQge1ZnU3RhdGVzfSBmcm9tIFwiLi4vLi4vY29yZS9zdGF0ZXMvdmctc3RhdGVzXCI7XG5cbmRlc2NyaWJlKCdQbGF5YmFjayBCdXR0b24nLCAoKSA9PiB7XG4gICAgbGV0IHBsYXliYWNrQnV0dG9uOlZnUGxheWJhY2tCdXR0b247XG4gICAgbGV0IHJlZjpFbGVtZW50UmVmO1xuICAgIGxldCBhcGk6VmdBUEk7XG5cbiAgICBiZWZvcmVFYWNoKCgpID0+IHtcbiAgICAgICAgcmVmID0ge1xuICAgICAgICAgICAgbmF0aXZlRWxlbWVudDoge1xuICAgICAgICAgICAgICAgIGdldEF0dHJpYnV0ZTogKG5hbWUpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG5hbWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuXG4gICAgICAgIGFwaSA9IG5ldyBWZ0FQSSgpO1xuICAgICAgICBhcGkubWVkaWFzID0ge1xuICAgICAgICAgICAgbWFpbjoge1xuICAgICAgICAgICAgICAgIHN0YXRlOiBWZ1N0YXRlcy5WR19QTEFZSU5HXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgc2Vjb25kYXJ5OiB7XG4gICAgICAgICAgICAgICAgc3RhdGU6IFZnU3RhdGVzLlZHX1BBVVNFRFxuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuXG5cbiAgICAgICAgcGxheWJhY2tCdXR0b24gPSBuZXcgVmdQbGF5YmFja0J1dHRvbihyZWYsIGFwaSk7XG4gICAgfSk7XG5cbiAgICBpdCgnU2hvdWxkIHNldCBwbGF5YmFja0luZGV4IGRlZmF1bHQgdmFsdWUgdG8gMScsICgpID0+IHtcbiAgICAgICAgZXhwZWN0KHBsYXliYWNrQnV0dG9uLnBsYXliYWNrSW5kZXgpLnRvRXF1YWwoMSk7XG4gICAgfSk7XG5cbiAgICBpdCgnU2hvdWxkIGdldCBtZWRpYSBieSBpZCBvbiBpbml0JywgKCkgPT4ge1xuICAgICAgICBzcHlPbihhcGksICdnZXRNZWRpYUJ5SWQnKS5hbmQuY2FsbEZha2UoKCkgPT4geyB9KTtcblxuICAgICAgICBwbGF5YmFja0J1dHRvbi52Z0ZvciA9ICd0ZXN0JztcbiAgICAgICAgcGxheWJhY2tCdXR0b24ub25QbGF5ZXJSZWFkeSgpO1xuXG4gICAgICAgIGV4cGVjdChhcGkuZ2V0TWVkaWFCeUlkKS50b0hhdmVCZWVuQ2FsbGVkV2l0aCgndGVzdCcpO1xuICAgIH0pO1xuXG4gICAgZGVzY3JpYmUoJ29uQ2xpY2sgKHNpbmdsZSBhbmQgbXVsdGlwbGUgbWVkaWEpJywgKCkgPT4ge1xuICAgICAgICBpdCgnc2hvdWxkIGluY3JlYXNlIHBsYXliYWNrSW5kZXgnLCAoKSA9PiB7XG4gICAgICAgICAgICBhcGkubWVkaWFzID0ge1xuICAgICAgICAgICAgICAgIG1haW46IHtcbiAgICAgICAgICAgICAgICAgICAgc3RhdGU6IFZnU3RhdGVzLlZHX1BMQVlJTkdcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICBwbGF5YmFja0J1dHRvbi50YXJnZXQgPSBhcGk7XG5cbiAgICAgICAgICAgIHBsYXliYWNrQnV0dG9uLm9uQ2xpY2soKTtcblxuICAgICAgICAgICAgZXhwZWN0KHBsYXliYWNrQnV0dG9uLnBsYXliYWNrSW5kZXgpLnRvRXF1YWwoMik7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIGl0KCdzaG91bGQgc2V0IHBsYXliYWNrUmF0ZSB0byB0YXJnZXQgbWVkaWEnLCAoKSA9PiB7XG4gICAgICAgICAgICBhcGkubWVkaWFzID0ge1xuICAgICAgICAgICAgICAgIG1haW46IHtcbiAgICAgICAgICAgICAgICAgICAgc3RhdGU6IFZnU3RhdGVzLlZHX1BMQVlJTkdcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICBwbGF5YmFja0J1dHRvbi50YXJnZXQgPSBhcGk7XG5cbiAgICAgICAgICAgIHBsYXliYWNrQnV0dG9uLm9uQ2xpY2soKTtcblxuICAgICAgICAgICAgZXhwZWN0KHBsYXliYWNrQnV0dG9uLnRhcmdldC5wbGF5YmFja1JhdGUpLnRvRXF1YWwoJzEuNScpO1xuICAgICAgICB9KTtcblxuICAgICAgICBpdCgnc2hvdWxkIHNldCBwbGF5YmFja1JhdGUgdG8gdGFyZ2V0IG1lZGlhJywgKCkgPT4ge1xuICAgICAgICAgICAgbGV0IG1lZGlhID0ge1xuICAgICAgICAgICAgICAgIHBsYXliYWNrUmF0ZToge1xuICAgICAgICAgICAgICAgICAgICB0ZXN0OiAnMSdcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICBwbGF5YmFja0J1dHRvbi50YXJnZXQgPSBtZWRpYTtcbiAgICAgICAgICAgIHBsYXliYWNrQnV0dG9uLnZnRm9yID0gJ3Rlc3QnO1xuXG4gICAgICAgICAgICBwbGF5YmFja0J1dHRvbi5vbkNsaWNrKCk7XG5cbiAgICAgICAgICAgIGV4cGVjdChwbGF5YmFja0J1dHRvbi50YXJnZXQucGxheWJhY2tSYXRlLnRlc3QpLnRvRXF1YWwoJzEuNScpO1xuICAgICAgICB9KTtcbiAgICB9KTtcbn0pO1xuXG5pbnRlcmZhY2UgRGVjb3JhdG9ySW52b2NhdGlvbiB7XG4gIHR5cGU6IEZ1bmN0aW9uO1xuICBhcmdzPzogYW55W107XG59XG4iXX0=