{"version":3,"sources":["../../../src/@ionic-native/plugins/app-update/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,MAAA,EAAQ,OAAA,EAAS,iBAAA,EAAkB,MAAO,oBAAA,CAAqB;AACxE,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAE3C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA8BG;AASH,IAAa,SAAS;IAAS,6BAAiB;IAAhD;;IAgBA,CAAC;IAfC;;;;OAIG;IAIH,kCAAc,GAAd,UAAe,SAAiB,IAAkB,MAAM,CAAC,CAAC,CAAC;IAO7D,gBAAC;AAAD,CAhBA,AAgBC,CAhB8B,iBAAiB,GAgB/C;AANM,oBAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;CACnB,CAAC;AACF,kBAAkB;AACX,wBAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;AANA;IAHC,OAAO,CAAC;QACP,aAAa,EAAE,SAAS;KACzB,CAAC;;;;+CACyD;AAThD,SAAS;IARrB,MAAM,CAAC;QACN,UAAU,EAAE,WAAW;QACvB,MAAM,EAAE,2BAA2B;QACnC,SAAS,EAAE,WAAW;QACtB,IAAI,EAAE,qDAAqD;QAC3D,SAAS,EAAE,CAAC,SAAS,CAAC;KACvB,CAAC;GAEW,SAAS,CAgBrB;SAhBY,SAAS","file":"index.js","sourceRoot":"","sourcesContent":["import { Plugin, Cordova, IonicNativePlugin } from '@ionic-native/core';\nimport { Injectable } from '@angular/core';\n\n/**\n * @name App Update\n * @description\n * This plugin does self-update for android\n *\n * @usage\n *\n * You should first host an XML file on your server with the following data in it:\n * ```xml\n * <update>\n *     <version>302048</version>\n *     <name>APK Name</name>\n *     <url>https://your-remote-api.com/YourApp.apk</url>\n * </update>\n * ```\n *\n * Then use the following code:\n *\n * ```typescript\n * import { AppUpdate } from '@ionic-native/app-update';\n *\n * constructor(private appUpdate: AppUpdate) {\n *\n *    const updateUrl = 'http://your-remote-api.com/update.xml';\n *    this.appUpdate.checkAppUpdate(updateUrl);\n *\n * }\n * ```\n *\n * The plugin will compare the app version and update it automatically if the API has a newer version to install.\n */\n@Plugin({\n  pluginName: 'AppUpdate',\n  plugin: 'cordova-plugin-app-update',\n  pluginRef: 'AppUpdate',\n  repo: 'https://github.com/vaenow/cordova-plugin-app-update',\n  platforms: ['Android']\n})\n\nexport class AppUpdate extends IonicNativePlugin {\n  /**\n   * Check and update\n   * @param updateUrl {string} update api url\n   * @return {Promise<any>} Returns a promise that resolves when something happens\n   */\n  @Cordova({\n    callbackOrder: 'reverse'\n  })\n  checkAppUpdate(updateUrl: string): Promise<any> { return; }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}